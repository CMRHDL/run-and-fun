buildscript {
    repositories { mavenCentral() }
    dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE") }
}

apply plugin: "java"
apply plugin: "eclipse-wtp"
apply plugin: "org.springframework.boot"

sourceCompatibility="1.8"
targetCompatibility="1.8"

jar {
    baseName = "run-and-fun"
    version =  "1.0.0-SNAPSHOT"
}

springBoot { mainClass = "net.inpercima.runandfun.Application" }

repositories { mavenCentral() }
dependencies {
    compile "com.google.guava:guava:19.0"

    compile "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-logging",
            "org.springframework.boot:spring-boot-starter-data-elasticsearch",
            "org.springframework.boot:spring-boot-starter-actuator"

    runtime "net.java.dev.jna:jna"
    testCompile "org.springframework.boot:spring-boot-starter-test",
            "junit:junit:4.12"
}

// see http://www.rehpoehler.de/gradle/Gradle-Eclipse-WTP-Beispiel.html
eclipse{
    project {
        natures = [
            'org.springframework.ide.eclipse.core.springnature',
            'org.springsource.ide.eclipse.gradle.core.nature',
            'org.eclipse.jdt.core.javanature',
            'org.eclipse.wst.common.modulecore.ModuleCoreNature',
            'org.eclipse.wst.common.project.facet.core.nature'
        ]
        buildCommand 'org.springframework.ide.eclipse.core.springbuilder'
    }

    classpath {
        defaultOutputDir = file('build/classes')

        downloadSources = true
        downloadJavadoc = false
    }

    wtp {
        facet {
            facet name: 'jst.web', version: '3.0'
        }
    }
}

task wrapper(type: Wrapper) { gradleVersion = "3.1" }

task stage {
    dependsOn build
}
